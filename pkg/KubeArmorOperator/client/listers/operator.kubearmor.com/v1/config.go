// SPDX-License-Identifier: Apache-2.0
// Copyright 2023 Authors of KubeArmor

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/kubearmor/KubeArmor/pkg/KubeArmorOperator/api/operator.kubearmor.com/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ConfigLister helps list Configs.
// All objects returned here must be treated as read-only.
type ConfigLister interface {
	// List lists all Configs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.Config, err error)
	// Configs returns an object that can list and get Configs.
	Configs(namespace string) ConfigNamespaceLister
	ConfigListerExpansion
}

// configLister implements the ConfigLister interface.
type configLister struct {
	indexer cache.Indexer
}

// NewConfigLister returns a new ConfigLister.
func NewConfigLister(indexer cache.Indexer) ConfigLister {
	return &configLister{indexer: indexer}
}

// List lists all Configs in the indexer.
func (s *configLister) List(selector labels.Selector) (ret []*v1.Config, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.Config))
	})
	return ret, err
}

// Configs returns an object that can list and get Configs.
func (s *configLister) Configs(namespace string) ConfigNamespaceLister {
	return configNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ConfigNamespaceLister helps list and get Configs.
// All objects returned here must be treated as read-only.
type ConfigNamespaceLister interface {
	// List lists all Configs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.Config, err error)
	// Get retrieves the Config from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.Config, error)
	ConfigNamespaceListerExpansion
}

// configNamespaceLister implements the ConfigNamespaceLister
// interface.
type configNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Configs in the indexer for a given namespace.
func (s configNamespaceLister) List(selector labels.Selector) (ret []*v1.Config, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.Config))
	})
	return ret, err
}

// Get retrieves the Config from the indexer for a given namespace and name.
func (s configNamespaceLister) Get(name string) (*v1.Config, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("config"), name)
	}
	return obj.(*v1.Config), nil
}
